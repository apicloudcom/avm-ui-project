<template>
	<safe-area class="page">
		<NavBar onBack={this.back}>TabBar</NavBar>
		<scroll-view>
			<DemoBlock title='基本用法' padding='0'>
				<TabBar>
					{{
						tabs.map(item => {
							return (
								<TabBar.Item key={item.key} icon={item.icon} title={item.title}/>
							)
						})
					}}
				</TabBar>
			</DemoBlock>
			<DemoBlock title='徽标' padding='0'>
				<TabBar>
					{{
						tabs.map(item => {
							return (
								<TabBar.Item key={item.key} icon={item.icon} title={item.title} badge={item.badge}/>
							)
						})
					}}
				</TabBar>
			</DemoBlock>
			<DemoBlock title='仅图标' padding='0'>
				<TabBar>
					{{
						tabs.map(item => {
							return (
								<TabBar.Item key={item.key} icon={item.icon}/>
							)
						})
					}}
				</TabBar>
			</DemoBlock>
			<DemoBlock title='仅标题' padding='0'>
				<TabBar>
					{{
						tabs.map(item => {
							return (
								<TabBar.Item key={item.key} title={item.title} badge={item.badge}/>
							)
						})
					}}
				</TabBar>
			</DemoBlock>
			<DemoBlock title='受控组件' padding='0'>
				<TabBar activeKey={activeKey} onChange={this.setActiveKey}>
					{{
						tabs.map(item => {
							return (
								<TabBar.Item key={item.key} icon={item.icon} title={item.title}/>
							)
						})
					}}
				</TabBar>
			</DemoBlock>
		</scroll-view>
	</safe-area>
</template>
<script>
import { TabBar, NavBar, DemoBlock, Badge } from '../../components/avm-ui/avm-ui';

const tabs = [
	{
		key: 'home',
		title: '首页',
		// icon: <AppOutline/>,
		icon: '占位',
		badge: Badge.dot
	},
	{
		key: 'todo',
		title: '我的待办',
		// icon: <UnorderedListOutline/>,
		icon: '占位',
		badge: '5'
	},
	{
		key: 'message',
		title: '我的消息',
		// icon:  active => active ? <MessageFill/> : <MessageOutline/>,
		icon: '占位',
		badge: '99+'
	},
	{
		key: 'personalCenter',
		title: '个人中心',
		// icon: <UserOutline/>,
		icon: '占位',
		badge: Badge.dot
	},
]

export default {
	name: 'demo-tabbar',
	data() {
		return{
			activeKey: 'todo'
		}
	},
	methods: {
		back() {
			api.closeWin();
		},
		setActiveKey(key) {
			api.toast({
				msg: key
			})
			this.data.activeKey = key
		}
	}
}
</script>
<style src="../../components/avm-ui/avm-ui.css"/>
<style>
.page {
	height: 100%;
	width: 100%;
}
</style>