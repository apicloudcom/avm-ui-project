<template>
	<safe-area class="page">
		<avm-nav-bar onBack={this.back}>avm-number-keyboard</avm-nav-bar>
		<scroll-view>
			<avm-list>
				<avm-list-item onClick={() => this.openKeyboard('demo1')}>默认键盘</avm-list-item>
				<avm-list-item onClick={() => this.openKeyboard('demo2')}>带标题键盘</avm-list-item>
				<avm-list-item onClick={() => this.openKeyboard('demo3')}>带确认键盘</avm-list-item>
				<avm-list-item onClick={() => this.openKeyboard('demo4')}>带自定义键盘</avm-list-item>
				<avm-list-item onClick={() => this.openKeyboard('demo5')}>乱序键盘</avm-list-item>
				<avm-list-item onClick={() => this.openKeyboard('demo7')} arrow={false}>
					<text :class="`${!value || value == null || value == '' ? 'placeholder-class' : 'text-class'}`">{{value || '请输入内容'}}</text>
				</avm-list-item>
			</avm-list>
		</scroll-view>
		<avm-number-keyboard
			visible={this.data.visible === 'demo1'}
			onClose={this.data.actions.onClose}
			onInput={this.data.actions.onInput}
			onDelete={this.data.actions.onDelete}
		/>
		<avm-number-keyboard
			visible={this.data.visible === 'demo2'}
			onClose={this.data.actions.onClose}
			onInput={this.data.actions.onInput}
			onDelete={this.data.actions.onDelete}
			title='数字键盘'
			customKey='-'
		/>
		<avm-number-keyboard
			visible={this.data.visible === 'demo3'}
			onClose={this.data.actions.onClose}
			onInput={this.data.actions.onInput}
			onDelete={this.data.actions.onDelete}
			onClearAll={this.data.actions.onClearAll}
			showCloseButton={false}
			confirmText='确定'
			customKey='-'
		/>
		<avm-number-keyboard
			visible={this.data.visible === 'demo4'}
			onClose={this.data.actions.onClose}
			onInput={this.data.actions.onInput}
			onDelete={this.data.actions.onDelete}
			customKey='.'
			showCloseButton={false}
			confirmText='确定'
			:isShowClearBtn="false"
		/>
		<avm-number-keyboard
			visible={this.data.visible === 'demo5'}
			onClose={this.data.actions.onClose}
			onInput={this.data.actions.onInput}
			onDelete={this.data.actions.onDelete}
			randomOrder
			customKey='X'
			confirmText='确定'
		/>
		<avm-number-keyboard
			visible={this.data.visible === 'demo7'}
			onClose={this.data.actions.onClose}
			onInput={this.onInput}
			onDelete={this.onDelete}
			customKey='X'
		/>
	</safe-area>
</template>
<script>
import '../../components/avm-ui/number-keyboard'
import '../../components/avm-ui/nav-bar'
import '../../components/avm-ui/list'
export default {
	name: 'demo-numberkeyboard',
	data() {
		return {
			visible: '',
			value: '',
			value1: '123',
			actions: {
				onClose: () => {
					api.toast({
						msg: 'close'
					})
					this.setVisible('')
				},
				onInput: key => {
					api.toast({
						msg: 'input' + key
					})
				},
				onDelete: () => {
					api.toast({
						msg: 'delete'
					})
				},
				onClearAll: () => {
					api.toast({
						msg:'点击清空按钮啦~~'
					})
				}
			}
		}
	},
	methods: {
		back() {
			api.closeWin();
		},
		setVisible(v) {
			this.data.visible = v;
		},
		openKeyboard(name) {
			this.setVisible(name)
		},
		onInput(v) {
			api.toast({
				msg: this.data.value+v
			})
			this.data.value = this.data.value+v
		},
		onDelete() {
			const {value} = this.data
			this.data.value = value.slice(0, value.length - 1)
		},
		InputOnInput(val) {
			api.toast({
				msg: val
			})
		}
	}
}
</script>
<style src="../../components/avm-ui/number-keyboard/index.css"/>
<style>
.page {
	height: 100%;
	width: 100%;
}
</style>